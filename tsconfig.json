{
  // TypeScript 컴파일러에 대한 설정을 지정하는 부분
  "compilerOptions": {
    // 프로젝트에서 사용할 수 있는 라이브러리를 지정
    // DOM과 관련된 라이브러리와 ESNext를 사용하도록 설정
    "lib": ["dom", "dom.iterable", "esnext"], 
    // JavaScript 파일을 컴파일할 때 TypeScript 컴파일러에게 허용하도록 지시
    "allowJs": true,
    "skipLibCheck": true,
    // 엄격한 타입 검사를 활성화
    "strict": true,
    // 컴파일 결과를 출력하지 않도록 타입 검사만 수행 
    "noEmit": true,
    // CommonJS 모듈을 ES 모듈로 변환할 때 interop을 사용하도록 설정
    "esModuleInterop": true,
    // ESNext를 사용하여 모듈을 생성합니다.
    "module": "CommonJS",
    // 모듈 해결 전략을 번들러에게 위임
    "moduleResolution": "bundler",
    // JSON 모듈을 해결할 것인지 여부를 지정
    "resolveJsonModule": true,
    "isolatedModules": true,
    // JSX 코드를 컴파일할 때 유지하도록 지정
    "jsx": "preserve",
    // 증분 컴파일을 활성화하여 변경된 파일만 다시 컴파일
    "incremental": true,
    // TypeScript의 추가적인 기능을 활용하기 위한 설정
    "plugins": [ // TypeScript에 플러그인을 추가하는 데 사용
      {
        "name": "next"
      }
    ],
    "paths": {
      // "@/*"를 현재 디렉토리로 매핑하도록 설정 코드에서 "@/"를 사용하여 상대 경로를 지정
      "@/*": ["./*"]
      // ex) "@/components"는 "./components"와 동일한 의미를 가집니다.
    }
  },
  // 컴파일러가 포함해야 할 파일의 목록을 지정
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  // 컴파일러가 제외해야 할 파일의 목록을 지정
  "exclude": ["node_modules"]
}
